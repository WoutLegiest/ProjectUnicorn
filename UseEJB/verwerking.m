pkg load signal 
data = [0.9822664, 0.86459064, 1.0214739, 0.98223877, 1.0214663, 1.0214586, 0.9430084, 1.0214729, 0.98224163, 0.94301605, 1.021471, 0.90378284, 0.9822359, 0.94300556, 1.0214624, 0.98223305, 1.0606852, 0.9822264, 0.9822283, 0.9822159, 1.0998659, 0.9821768, 0.9821749, 1.0606298, 1.0213928, 0.9821663, 0.98213005, 0.90367985, 1.0213499, 1.0605679, 1.0998106, 1.0213642, 0.98213005, 1.0213575, 1.0213423, 0.9428892, 1.0213432, 1.0213289, 1.0213118, 0.9820852, 0.9820757, 1.060524, 0.8251543, 0.942832, 1.0212736, 1.0605049, 0.9036026, 0.90359783, 0.9820366, 0.903574, 0.9820194, 0.9035711, 0.98202324, 0.98200417, 0.9427843, 0.94277954, 1.0604477, 0.98198795, 1.0212231, 0.9427681, 1.0212193, 0.98198795, 0.94275475, 0.90353584, 0.90352154, 1.0211916, 0.981967, 0.981966, 1.0211964, 0.9427433, 0.9427328, 0.9035053, 0.9427414, 1.0211868, 0.9819765, 0.94275665, 1.0212221, 1.0212231, 1.0212145, 0.9035225, 1.0211916, 1.0604239, 1.0212173, 0.9820137, 0.9427843, 1.0604696, 1.0212402, 0.9427748, 1.0604563, 1.1781654, 1.4136591, 1.1388702, 0.7086239, 1.338047, 1.0277376, 0.59945107, 1.0365229, 0.76242924, 0.91776276, 0.87547016, 1.653369, 1.3374033, 0.8659096, 1.0230474, 1.0241737, 0.94510365, 0.39713287, 1.1015615, 1.1006985, 1.1795492, 1.100316, 0.47195244, 1.2959194, 0.9426861, 1.1780958, 0.94275856, 1.0604239, 1.0212212, 0.9427576, 0.94279766, 1.021266, 0.9820223, 1.0212412, 0.90355873, 1.0604725, 1.0212564, 1.0212746, 0.98207474, 0.9820776, 0.9820709, 0.94284153, 0.98205566, 0.98203754, 0.9820242, 0.98202896, 1.1389809, 1.0609169, 0.9826126, 1.0614729, 0.9444065, 1.2206173, 1.3017778, 1.7407379, 2.2340927, 1.3879013, 1.329895, 0.13195038, -0.84050465, -1.566843, -1.7251048, -0.71778774, 5.631751, -10.036155, 7.967121, -2.3114362, 2.6322155, 0.63460255, 1.1075268, 1.2234774, 1.0250645, 0.94615555, 0.9456625, 1.2586899, 0.98498726, 1.3773527, 0.8692045, 0.947546, 0.9457569, 1.2984076, 1.063407, 1.3397627, 1.6175003, 2.4135637, 2.2911835, 1.6278505, 0.8674717, -0.42630672, -1.3512363, -1.3832922, -0.6310835, -0.78728104, -0.7577772, 0.52366257, -0.77653503, -0.30974102, 1.4923506, 0.6711836, 1.2203321, 1.1107206, 1.3483143, 1.2353601, 1.6022911, 1.2798443, 0.50290394, 0.22689152, -0.02768135, -0.45289898, -0.116493225, 5.8610735, -1.0950718, 2.7087479, 0.4375763, 3.0355616, 1.2324944, -0.37471294, -1.0773754, -0.032307625, -0.30335426, -0.34025288, 0.3753109, 0.98585796, 2.4583883, 3.023076, 1.1791601, 0.9438515, 0.90486526, 1.0227814, 1.0623388, 1.0232725, 1.0627289, 1.0236568, 0.94520473, 1.0626822, 1.0623398, 1.0621395, 0.9836798, 0.9445791, 0.98384, 1.2974834, 1.1406555, 0.90499973, 0.9047756, 1.0222673, 1.0221968, 1.0221615, 0.90453625]; 
endData = length(data) -1 ; 
 endData = endData*0.01; 
 t = 0:0.01:endData; 
 %% Step 1: resample at fixed time step 
Fs = 100.; % desired (fixed) sample rate 
%[data_resampled,t_resampled] = resample(data,t,Fs); 
t_resampled = t(1):1/Fs:t(end); 
data_resampled = interp1(t, data, t_resampled, 'spline'); 
% to make sure time starts at t = 0s: 
t_resampled = t_resampled - t_resampled(1); 
%% Step 2: Compute amplitude spectrum of the signal 
L = length(data_resampled); 
f = Fs*(0:(L/2))/L; 
A2_data = fft(data_resampled); A2 = abs(A2_data/L); 
A_data = A2(1:L/2+1); A_data(2:end-1) = 2*A_data(2:end-1); 
maxi = max(A_data); 
k = find(A_data==maxi); 
disp(f(k)); 
disp('fase'); 
disp(A_data); 
disp('fase'); 
disp(f); 
disp('fase'); 
%% Step 3: Apply bandbass filter 
% Lowerbound and upperbound cutoff bandpass filter (relative to Nyquist frequency) 
f1 = 1/Fs*2; f2 = 4/Fs*2; 
% [b,a] = butter(n,Wn,ftype) 
filter_order = 4; 
[b,a] = butter(filter_order,[f1 f2]); 
data_filtered = filtfilt(b,a,data_resampled); 
A2_data = fft(data_filtered); A2 = abs(A2_data/L); 
A_data = A2(1:L/2+1); A_data(2:end-1) = 2*A_data(2:end-1); 
maxi = max(A_data); 
k = find(A_data==maxi); 
disp(f(k)); 
disp('fase'); 
disp(A_data); 
