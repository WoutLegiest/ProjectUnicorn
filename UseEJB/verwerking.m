pkg load signal 
data = [1.0616322, 1.0223904, 1.2182608, 0.9044838, 1.0219889, 1.0611582, 1.1002741, 1.0217762, 0.9824953, 0.9824047, 1.0608158, 1.0999746, 1.099906, 1.0998421, 1.0605574, 1.060504, 0.8643427, 1.0996456, 1.0996084, 1.0995626, 1.0995522, 0.98180676, 1.1386957, 1.0601978, 1.0601845, 1.0209131, 0.98165226, 1.0208359, 1.1384745, 1.0599861, 1.1384192, 1.0599318, 1.099143, 1.0206709, 0.9814348, 1.0598764, 1.0206213, 1.0598373, 1.1382742, 1.0990448, 1.1382408, 1.059782, 1.0989838, 1.0597172, 0.9812279, 1.0596666, 1.0204382, 1.1773272, 1.1380863, 1.0596151, 1.0596046, 1.0203667, 1.0595684, 1.0595589, 1.0203142, 1.1379814, 1.0595131, 0.9026003, 1.0594893, 1.0594721, 1.020237, 1.0594683, 0.9810238, 1.0987053, 1.09869, 1.0594473, 0.98099804, 0.9809942, 1.0202236, 1.0594511, 1.0986738, 1.0986643, 1.0986652, 1.0594368, 1.0986586, 1.059411, 1.0594091, 1.0593977, 1.0594006, 1.0986328, 1.020174, 1.0986166, 1.1378517, 1.0986614, 1.0594559, 1.0594816, 1.0202618, 1.0202522, 1.0202475, 1.1379385, 1.0202627, 1.0595016, 0.9810333, 1.0594807, 1.0202465, 1.0986958, 1.0202332, 1.0594578, 1.0202398, 1.059473, 1.0987139, 1.0986795, 1.0202026, 1.0986567, 1.0594311, 0.98096657, 1.0986366, 1.0201769, 1.098628, 1.1378584, 1.0986328, 1.0593805, 1.0201292, 1.0593519, 1.0593348, 1.0985556, 1.0593405, 0.9809065, 1.0593634, 1.0201311, 1.0593576, 1.0593386, 0.9808693, 1.1769953, 1.0985518, 1.0201063, 1.0593262, 1.0593262, 1.0985327, 0.90237045, 1.0984955, 1.0199871, 0.8630123, 1.2553148, 1.3337355, 0.86304474, 0.9022598, 1.0591774, 1.0591774, 1.0199757, 1.0594234, 1.0984783, 1.0985613, 1.0200396, 0.98084736, 1.0200653, 1.0985088, 1.0985088, 1.0592718, 1.0200462, 1.1377258, 1.0985012, 1.137723, 1.0592699, 1.0984955, 1.0984955, 1.0200396, 1.0200319, 0.98080826, 0.5100918, 1.7261, 1.4514675, 1.3730822, 1.1769257]; 
endData = length(data) -1 ; 
 endData = endData*0.01; 
 t = 0:0.01:endData; 
 %% Step 1: resample at fixed time step 
Fs = 100.; % desired (fixed) sample rate 
%[data_resampled,t_resampled] = resample(data,t,Fs); 
t_resampled = t(1):1/Fs:t(end); 
data_resampled = interp1(t, data, t_resampled, 'spline'); 
% to make sure time starts at t = 0s: 
t_resampled = t_resampled - t_resampled(1); 
%% Step 2: Compute amplitude spectrum of the signal 
L = length(data_resampled); 
f = Fs*(0:(L/2))/L; 
A2_data = fft(data_resampled); A2 = abs(A2_data/L); 
A_data = A2(1:L/2+1); A_data(2:end-1) = 2*A_data(2:end-1); 
maxi = max(A_data); 
k = find(A_data==maxi); 
disp(f(k)); 
disp('fase'); 
disp(A_data); 
disp('fase'); 
disp(f); 
disp('fase'); 
%% Step 3: Apply bandbass filter 
% Lowerbound and upperbound cutoff bandpass filter (relative to Nyquist frequency) 
f1 = 1/Fs*2; f2 = 4/Fs*2; 
% [b,a] = butter(n,Wn,ftype) 
filter_order = 4; 
[b,a] = butter(filter_order,[f1 f2]); 
data_filtered = filtfilt(b,a,data_resampled); 
A2_data = fft(data_filtered); A2 = abs(A2_data/L); 
A_data = A2(1:L/2+1); A_data(2:end-1) = 2*A_data(2:end-1); 
maxi = max(A_data); 
k = find(A_data==maxi); 
disp(f(k)); 
disp('fase'); 
disp(A_data); 
